<Page
    class="page"
    navigatingTo="onNavigatingTo"  
    xmlns:nsDrawer="nativescript-pro-ui/sidedrawer"
    xmlns:myDrawer="shared/my-drawer"
    xmlns:chart="nativescript-pro-ui/chart"
    xmlns:ns="nativescript-carousel"
    xmlns="http://www.nativescript.org/tns.xsd">

  <ActionBar class="action-bar">
    <!-- 
         Use the NavigationButton as a side-drawer button in Android because ActionItems are shown on the right side of the ActionBar
    -->
    <NavigationButton ios:visibility="collapsed" icon="res://menu" tap="onDrawerButtonTap"></NavigationButton>
    <!-- 
         Use the ActionItem for IOS with position set to left. Using the NavigationButton as a side-drawer button in iOS is not possible, because its function is to always navigate back in the application.
    -->
    <ActionItem icon="res://navigation/menu" 
		android:visibility="collapsed" 
		tap="onDrawerButtonTap"
		ios.position="left">
    </ActionItem>
    <Label class="action-bar-title" text="Dashboard"></Label>
  </ActionBar>

  <!--
      RadSideDrawer is a UI component part of the Progress NativeScript UI set of components.
      Learn more about the RadSideDrawer UI component and how it can be customized in this documentation article:
      http://docs.telerik.com/devtools/nativescript-ui/Controls/NativeScript/SideDrawer/getting-started
      The RadSideDrawer component is designed to be used as a root element to the <Page> and
      it shouldn't have any other siblings other than the <ActionBar> component.
  -->
  <nsDrawer:RadSideDrawer id="sideDrawer" showOverNavigation="true">
    <!--
        Use the RadSideDrawer.drawerTransition component to change the open/close animation of the drawer.
    -->
    <nsDrawer:RadSideDrawer.drawerTransition>
      <nsDrawer:SlideInOnTopTransition/>
    </nsDrawer:RadSideDrawer.drawerTransition>

    <!--
        Use the RadSideDrawer.drawerContent component to display the content of the app drawer on this page.
        Always wrap content in a layout component.
    -->
    <nsDrawer:RadSideDrawer.drawerContent>
      <StackLayout>
        <!--
            Use {N} custom components to reuse UI across your mobile app.
            The MyDrawer custom component defined in "/shared/my-drawer" holds the contents of the app drawer.
            Learn more about custom components and how they can be used in this documentation article:
            http://docs.nativescript.org/ui/basics#custom-components
        -->
        <myDrawer:MyDrawer selectedPage="Dashboard"/>
      </StackLayout>
    </nsDrawer:RadSideDrawer.drawerContent>

    <!--
        Use the RadSideDrawer.mainContent component to display the content of the page when you have an app drawer.
        Always wrap content in a layout component.
    -->
    <nsDrawer:RadSideDrawer.mainContent>
      <GridLayout class="page-content" rows="*, auto" columns="*">
	<ns:Carousel row="0" indicatorOffset="0,75" indicatorColor="#66ccff" indicatorColorUnselected="#cceeff">
	  <ns:CarouselItem>
	    <Label text="Pushes" class="daily-info-label"/>
	    <chart:RadCartesianChart class="dashboard-chart">
	      <chart:RadCartesianChart.series>
		<chart:BarSeries legendTitle="Pushes With" stackMode="stack" items="{{ HistoricalDataSource }}" categoryProperty="Date" valueProperty="pushesWith"/>
		<chart:BarSeries legendTitle="Pushes Without" stackMode="stack" items="{{ HistoricalDataSource }}" categoryProperty="Date" valueProperty="pushesWithout"/>
	      </chart:RadCartesianChart.series>
	      <chart:RadCartesianChart.horizontalAxis>
		<chart:DateTimeContinuousAxis
		    plotMode="{{ getDateFormat.plotMode }}"
		    majorStep="{{ getDateFormat.majorStep }}"
		    dateFormat="{{ getDateFormat.format }}"
		    labelFitMode="{{ getDateFormat.labelFitMode }}"/>
	      </chart:RadCartesianChart.horizontalAxis>
	      <chart:RadCartesianChart.verticalAxis>
		<chart:LinearAxis/>
	      </chart:RadCartesianChart.verticalAxis>
	      <chart:RadCartesianChart.legend>
		<chart:RadLegendView position="Top" />
	      </chart:RadCartesianChart.legend>
	    </chart:RadCartesianChart>
	  </ns:CarouselItem>
	  <ns:CarouselItem>
	    <Label text="Coast" class="daily-info-label"/>
	    <chart:RadCartesianChart class="dashboard-chart">
	      <chart:RadCartesianChart.series>
		<chart:BarSeries legendTitle="Coast With" items="{{ HistoricalDataSource }}" categoryProperty="Date" valueProperty="coastWith"/>
		<chart:BarSeries legendTitle="Coast Without" items="{{ HistoricalDataSource }}" categoryProperty="Date" valueProperty="coastWithout"/>
	      </chart:RadCartesianChart.series>
	      <chart:RadCartesianChart.horizontalAxis>
		<chart:DateTimeContinuousAxis
		    plotMode="{{ getDateFormat.plotMode }}"
		    majorStep="{{ getDateFormat.majorStep }}"
		    dateFormat="{{ getDateFormat.format }}"
		    labelFitMode="{{ getDateFormat.labelFitMode }}"/>
	      </chart:RadCartesianChart.horizontalAxis>
	      <chart:RadCartesianChart.verticalAxis>
		<chart:LinearAxis/>
	      </chart:RadCartesianChart.verticalAxis>
	      <chart:RadCartesianChart.legend>
		<chart:RadLegendView position="Top" />
	      </chart:RadCartesianChart.legend>
	    </chart:RadCartesianChart>
	  </ns:CarouselItem>
	  <ns:CarouselItem>
	    <Label text="Distance" class="daily-info-label"/>
	    <chart:RadCartesianChart class="dashboard-chart">
	      <chart:RadCartesianChart.series>
		<chart:BarSeries items="{{ HistoricalDataSource }}" categoryProperty="Date" valueProperty="distance"/>
	      </chart:RadCartesianChart.series>
	      <chart:RadCartesianChart.horizontalAxis>
		<chart:DateTimeContinuousAxis
		    plotMode="{{ getDateFormat.plotMode }}"
		    majorStep="{{ getDateFormat.majorStep }}"
		    dateFormat="{{ getDateFormat.format }}"
		    labelFitMode="{{ getDateFormat.labelFitMode }}"/>
	      </chart:RadCartesianChart.horizontalAxis>
	      <chart:RadCartesianChart.verticalAxis>
		<chart:LinearAxis/>
	      </chart:RadCartesianChart.verticalAxis>
	      <chart:RadCartesianChart.legend>
	      </chart:RadCartesianChart.legend>
	    </chart:RadCartesianChart>
	  </ns:CarouselItem>
	</ns:Carousel>
	<SegmentedBar row="1" selectedIndex="2" selectedIndexChanged="{{ onDataRangeChanged }}">
	  <SegmentedBar.items>
	    <SegmentedBarItem title="Year"/>
	    <SegmentedBarItem title="Month"/>
	    <SegmentedBarItem title="Week"/>
	  </SegmentedBar.items>
	</SegmentedBar>
      </GridLayout>
    </nsDrawer:RadSideDrawer.mainContent>
  </nsDrawer:RadSideDrawer>

</Page>
