<Page
    class="page"
    navigatingTo="onNavigatingTo"  
    xmlns:nsDrawer="nativescript-pro-ui/sidedrawer"
    xmlns:myDrawer="shared/my-drawer"
    xmlns="http://www.nativescript.org/tns.xsd">

  <ActionBar class="action-bar">
    <!-- 
         Use the NavigationButton as a side-drawer button in Android because ActionItems are shown on the right side of the ActionBar
    -->
    <NavigationButton ios:visibility="collapsed" icon="res://menu" tap="onDrawerButtonTap"></NavigationButton>
    <!-- 
         Use the ActionItem for IOS with position set to left. Using the NavigationButton as a side-drawer button in iOS is not possible, because its function is to always navigate back in the application.
    -->
    <ActionItem icon="res://navigation/menu" 
		android:visibility="collapsed" 
		tap="onDrawerButtonTap"
		ios.position="left">
    </ActionItem>

    <ActionItem ios.position="right" tap="onSaveAccountTap">
      <ActionItem.actionView>
        <Button text="Save" tap="onSaveAccountTap" class="action-item"/>
      </ActionItem.actionView>
    </ActionItem>
    
    <Label class="action-bar-title" text="Account"></Label>
  </ActionBar>

  <!--
      RadSideDrawer is a UI component part of the Progress NativeScript UI set of components.
      Learn more about the RadSideDrawer UI component and how it can be customized in this documentation article:
      http://docs.telerik.com/devtools/nativescript-ui/Controls/NativeScript/SideDrawer/getting-started
      The RadSideDrawer component is designed to be used as a root element to the <Page> and
      it shouldn't have any other siblings other than the <ActionBar> component.
  -->
  <nsDrawer:RadSideDrawer id="sideDrawer" showOverNavigation="true">
    <!--
        Use the RadSideDrawer.drawerTransition component to change the open/close animation of the drawer.
    -->
    <nsDrawer:RadSideDrawer.drawerTransition>
      <nsDrawer:SlideInOnTopTransition/>
    </nsDrawer:RadSideDrawer.drawerTransition>

    <!--
        Use the RadSideDrawer.drawerContent component to display the content of the app drawer on this page.
        Always wrap content in a layout component.
    -->
    <nsDrawer:RadSideDrawer.drawerContent>
      <StackLayout>
        <!--
            Use {N} custom components to reuse UI across your mobile app.
            The MyDrawer custom component defined in "/shared/my-drawer" holds the contents of the app drawer.
            Learn more about custom components and how they can be used in this documentation article:
            http://docs.nativescript.org/ui/basics#custom-components
        -->
        <myDrawer:MyDrawer selectedPage="Account"/>
      </StackLayout>
    </nsDrawer:RadSideDrawer.drawerContent>

    <!--
        Use the RadSideDrawer.mainContent component to display the content of the page when you have an app drawer.
        Always wrap content in a layout component.
    -->
    <nsDrawer:RadSideDrawer.mainContent>
      <ScrollView>
      <GridLayout rows="auto, auto, auto, auto, auto, auto" class="page-content">
        <Label colSpan="2" class="page-icon fa" text="&#xf2be;"></Label>
	<GridLayout row="1" colSpan="2" columns="150, *">
	  <Label text="Name" dock="left" class="account-item"/>
	  <TextField col="1" text="{{ name }}" class="account-text-entry" hint="John Smith" dock="right"/>
	</GridLayout>
	<GridLayout row="2" colSpan="2" columns="150, *">
	  <Label text="Email" dock="left" class="account-item"/>
	  <TextField col="1" text="{{ email }}" class="account-text-entry" hint="example@the.net.com" dock="right"/>
	</GridLayout>
	<GridLayout row="3" colSpan="2" columns="150, *">
	  <Label text="Account" dock="left" class="account-item"/>
	  <TextField col="1" text="{{ account }}" class="account-text-entry" hint="yourAccountName" dock="right"/>
	</GridLayout>
	<Button row="4" colSpan="2" text="Change Password" tap="onChangePasswordTap"/>
	<Button row="5" colSpan="2" text="Reset Account" tap="onResetAccountTap"/>
      </GridLayout>
      </ScrollView>
    </nsDrawer:RadSideDrawer.mainContent>
  </nsDrawer:RadSideDrawer>
</Page>
